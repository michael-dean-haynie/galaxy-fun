const int TERRAN = 0;
const int ZERG = 1;
const int PROTOSS = 2;
const int RACE_COUNT = 3;

// module headers
// include "scripts/template/template_h.galaxy" // example boilerplate
include "scripts/util/util_h"
include "scripts/catalog/catalog_h"
include "scripts/bank/bank_h"
include "scripts/scores/scores_h"
include "scripts/triggers/triggers_h"
include "scripts/dialogs/dialogs_h"
include "scripts/dialogs/hotkeys/dialogs_hotkeys_h"
include "scripts/screenbuttons/screenbuttons_h"
include "scripts/hotkeys/structures/hotkeys_structures_h"
include "scripts/hotkeys/production/hotkeys_production_h"
include "scripts/hotkeys/upgrades/hotkeys_upgrades_h"

// module implementations
// include "scripts/template/template.galaxy" // example boilerplate
include "scripts/util/util"
include "scripts/catalog/catalog"
include "scripts/bank/bank"
include "scripts/scores/scores"
include "scripts/triggers/triggers"
include "scripts/dialogs/dialogs"
include "scripts/dialogs/hotkeys/dialogs_hotkeys"
include "scripts/screenbuttons/screenbuttons"
include "scripts/hotkeys/structures/hotkeys_structures"
include "scripts/hotkeys/production/hotkeys_production"
include "scripts/hotkeys/upgrades/hotkeys_upgrades"
include "scripts/explore" // exploratory / throw-away

void main() {
    dbg("starting main()");

    // initialization
    // tp__init();  // template/template.galaxy - example boilerplate
    ut__init();     // util/util.galaxy
    ct__init();     // catalog/catalog.galaxy
    // bk__init();  // bank/bank.galaxy - needs to be triggered by mapInit trigger (idk/idc)
    sc__init();     // scores/scores.galaxy
    tr__init();     // triggers/triggers.galaxy
    dg__init();     // dialogs/dialogs.galaxy
    sb__init();     // screenbuttons/screenbuttons.galaxy
    hk_st__init();  // hotkeys/structures/hotkeys_structures.galaxy
    hk_pd__init();  // hotkeys/production/hotkeys_production.galaxy
    hk_ug__init();  // hotkeys/upgrades/hotkeys_upgrades.galaxy

    ///////////////////////////////////////

    // hk_st__begin(TERRAN);
    dg__createSelectTrainingAreaDialog();

    dbg("finishing main()");
}
